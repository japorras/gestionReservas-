<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc
        	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
			http://www.springframework.org/schema/data/jpa
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
   <bean id="reserva" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean">
        <property name="serviceInterface" value="gr.trade.com.ws.IReservarArticulo" />
        <property name="wsdlDocumentUrl" value="resources/ReservarArticuloWS.wsdl" />
        <property name="namespaceUri" value="http://ws.com.trade.gr/" />
        <property name="serviceName" value="ReservarArticuloWS" />
        <property name="endpointAddress" value="http://localhost:8080/gr.aja-ws/webservices/reservarArticulo" />
    </bean>
	
    
   
    <bean id="reservarArticuloClient" class="gr.trade.com.rest.ReservarArticuloClient" />
    
    <!-- Activates various annotations to be detected in bean classes -->
 	<context:annotation-config />
  
 	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
  	For example @Controller and @Service. Make sure to set the correct base-package-->
 	<!-- <context:component-scan base-package="gr.trade.com" />-->
    <context:component-scan base-package="gr.trade.com" /> 
 	
 	<!-- Configures the annotation-driven Spring MVC Controller programming model.
 	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
 	<mvc:annotation-driven />
    
</beans>
